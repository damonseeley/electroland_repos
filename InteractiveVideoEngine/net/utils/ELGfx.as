package net.electroland.utils {		public class ELGfx{	import flash.display.Shape;	import flash.display.LineScaleMode;		public static function filledRect(dX:Number,dY:Number,w:Number,h:Number,c:Number,round:Number = 0,a:Number = 1.0):Shape {		var child:Shape=new Shape();		child.graphics.beginFill(c);		if (round != 0) {			child.graphics.drawRoundRect(dX,dY,w,h,round);		} else {			child.graphics.drawRect(dX,dY,w,h);		}		child.alpha = a;		child.graphics.endFill();		return child;	}		public static function filledCircle(dX:Number,dY:Number,r:Number,c:Number,a:Number = 1.0):Shape {		var child:Shape=new Shape();		child.graphics.beginFill(c);		child.graphics.drawCircle(dX,dY,r);		child.alpha = a;		child.graphics.endFill();		return child;	}		public static function outlinedRect(dX:Number,dY:Number,w:Number,h:Number,c:Number,round:Number = 0,s:Number = 1.0,a:Number = 1.0):Shape {		var child:Shape=new Shape();		var lineWeight:Number = s;		child.graphics.lineStyle(lineWeight,c,a,false,LineScaleMode.NORMAL);		if (round != 0) {			child.graphics.drawRoundRect(dX,dY,w,h,round);		} else {			child.graphics.drawRect(dX,dY,w,h);		}		return child;	}		public static function filledTriangle(dX:Number,dY:Number,w:Number,h:Number,c:Number,s:Number,a:Number):Shape {		var child:Shape = new Shape();		/*child.graphics.beginFill(c);		child.graphics.moveTo(dX, dY);		child.graphics.lineTo(w, h/2);		child.graphics.lineTo(dX, h);		child.graphics.lineTo(dX, dY);		child.graphics.endFill();*/				child.graphics.beginFill(c);		child.graphics.moveTo(0, 0);		child.graphics.lineTo(w, h/2);		child.graphics.lineTo(0, h);		child.graphics.lineTo(0, 0);		child.graphics.endFill();				child.x = dX;		child.y = dY;		child.alpha = a;		return child;	}		public static function outlinedTriangle(dX:Number,dY:Number,w:Number,h:Number,c:Number,s:Number,a:Number):Shape {		var child:Shape = new Shape();		child.graphics.lineStyle(s,c,1.0,false,LineScaleMode.NONE);		child.graphics.moveTo(dX, dY);		child.graphics.lineTo(w, h/2);		child.graphics.lineTo(dX, h);		child.graphics.lineTo(dX, dY);		child.alpha = a;		return child;	}		public static function line(dX:Number,dY:Number,w:Number,h:Number,c:Number,s:Number,a:Number):Shape {		var child:Shape = new Shape();				child.graphics.lineStyle(s,c,1.0,false,LineScaleMode.NONE);		child.graphics.moveTo(dX, dY);		child.graphics.lineTo(w, h);		child.alpha = a;		return child;					}					}}