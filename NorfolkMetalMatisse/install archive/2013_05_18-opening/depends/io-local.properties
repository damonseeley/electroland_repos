# concrete instances of Phoenix bus coupler. 
#  Type definition is class behind $factory
#  address is the IP location of the bus coupler
#  port (optional) will set the port to something other than 502
#  endianness will probably always be BIG
#  startRef if the offset to the data section of the response
#  totalRegisters is the total number of 16 bit registers to read
#  totalChannels is the size of the InputChannel array that patches are going to.

# this is kind of a mess. need to move factory params and "global" params to different objects.
settings.global $fps 30

# NORMAL
#iodevice.phoenix1 = $factory net.electroland.eio.devices.modbus.ModBusTcpDeviceFactory $address 192.168.247.21 $port 502 $startRef 192 $totalRegisters 2 $totalChannels 2 $endianness BIG
# when RECORDING
#iodevice.phoenix1 = $factory net.electroland.eio.devices.modbus.ModBusTcpRecordingDeviceFactory $filename recordings/phoenix.log $address 192.168.247.21 $port 501 $startRef 192 $totalRegisters 1 $totalChannels 1 $endianness BIG
# when PLAYING BACK FROM FILE
iodevice.phoenix1 = $useRecordedFilteredValues false $factory net.electroland.eio.devices.modbus.ModBusTcpPlaybackDeviceFactory $filename recordings/13ftRtoL.txt $address 192.168.247.21 $port 501 $startRef 192 $totalRegisters 1 $totalChannels 1 $endianness BIG

# InputChannel mappings (first bus coupler has 5 channels because we split channel one into two bytes)
ichannel.c0     = $device phoenix1 $register 0 $datatype SHORT $x 50  $y 0 $z 0 $units meterPixels $filters threshold,trigger
ichannel.c1     = $device phoenix1 $register 1 $datatype SHORT $x 175 $y 0 $z 0 $units meterPixels $filters threshold,trigger

# filters
iofilter.trigger $class net.electroland.norfolk.eio.filters.ValueDetectedFilter $value 20000 $timeout 2000
iofilter.threshold $class net.electroland.norfolk.eio.filters.ThresholdFilter $threshold 20000 $aboveInclusiveValue 30000 $belowExclusiveValue 0
iofilter.boxcar $class net.electroland.eio.filters.BoxCar $samples 30
iofilter.scale $class net.electroland.eio.filters.Scale $scaleFactor .5