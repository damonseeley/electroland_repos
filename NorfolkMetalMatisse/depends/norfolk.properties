# ------------- size of the Animation canvas is here. --------------------------
settings.global = $fps 33 $width 400 $height 400

# ------------------------- animation data ------------------------------------- 
# bounding waving animated gif
content.slowWave = $class net.electroland.ea.content.RotatingImageContent $root depends/images/test/ $fps 20
slowWave.frame.1 =  $file T1.gif
slowWave.frame.2 =  $file T2.gif
slowWave.frame.3 =  $file T3.gif
slowWave.frame.4 =  $file T4.gif
slowWave.frame.5 =  $file T5.gif
slowWave.frame.6 =  $file T6.gif
slowWave.frame.7 =  $file T7.gif
slowWave.frame.8 =  $file T8.gif
slowWave.frame.9 =  $file T9.gif
slowWave.frame.10 = $file T10.gif

#whitespace5
#whitespace 6

# solid red rectangle
content.red = $class net.electroland.ea.content.SolidColorContent $red 255 $green 0 $blue 0

# solid white rectangle
content.white = $class net.electroland.ea.content.SolidColorContent $red 255 $green 255 $blue 255

# white gradient image (MAKE SURE depends/images is in your classpath. NOT just depends.
content.whitegradient = $class net.electroland.ea.content.ImageContent $file gradient.png
content.gradientinvert = $class net.electroland.ea.content.ImageContent $file gradient_inverted.png

# ---------------------------- sound data ------------------------------------- 
sound.001 = $filename depends/audio/beep_01.mp3
sound.002 = $filename depends/audio/beep_02.mp3

# -------------------- sensor to clip mappings --------------------------------- 
channelClip.F01 $channel F01 $clipPlayerMethod red $fixture f01
channelClip.F02 $channel F02 $clipPlayerMethod red $fixture f02
channelClip.F03 $channel F03 $clipPlayerMethod red $fixture f03
channelClip.F05 $channel F05 $clipPlayerMethod red $fixture f05
channelClip.F06 $channel F06 $clipPlayerMethod red $fixture f06
channelClip.F08 $channel F08 $clipPlayerMethod red $fixture f08
channelClip.F09 $channel F09 $clipPlayerMethod red $fixture f09
channelClip.F10 $channel F10 $clipPlayerMethod red $fixture f10
channelClip.F11 $channel F11 $clipPlayerMethod red $fixture f11
channelClip.F12 $channel F12 $clipPlayerMethod red $fixture f12

channelClip.B01 $channel B01 $clipPlayerMethod red $fixture b01
channelClip.B02 $channel B02 $clipPlayerMethod red $fixture b02
channelClip.B03 $channel B03 $clipPlayerMethod red $fixture b03

channelClip.Train $channel TrainL $clipPlayerMethod red $fixture null
