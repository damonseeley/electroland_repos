#global settings
settings.global = $pollrate 30 $suspect -1

# type definition
#  in this case, phoenix
#  this kind of device always has the extra values startRef and count.
#  * startRef is the starting register for data to be read from
#  * count is the number of registers to read starting from startRef.
iodeviceType.phoenix4DI8DO = $factory net.electroland.eio.devices.ModBusTCPSlaveDeviceFactory $startRef 192 $count 2

# four different types of data can be read out of a modbusTCP registers
# * exactly two BYTEs can be read.  you can patch either 0 or 1. 
patch.0 = $type phoenix4DI8DO $register 0 $datatype BYTE  $index 0
# * a short can be read.  endianness needs to be specified.
patch.1 = $type phoenix4DI8DO $register 1 $datatype SHORT $endianness BIG
# * an int can be read.  again, endianness needs to be specified.  
patch.2 = $type phoenix4DI8DO $register 2 $datatype INT   $endianness BIG
# * any of 16 bits.  specify the endianness and then the index (0-15)
patch.3 = $type phoenix4DI8DO $register 3 $datatype BIT   $endianness BIG

# concrete instances of Phoenix bus coupler
iodevice.phoenix1 = $type phoenix4DI8DO $ipaddress 192.168.247.21

# each state represents a channel that we can "subscribe" to.  Each state is tied to a patch on a device.
isignal.i0 = $iodevice phoenix1 $patch 0 $tags i1 $x 623.18 $y 11.94 $z 0 $units meterPixels
istate.i1  = $iodevice phoenix1 $patch 2 $tags i1 $x 623.18 $y 11.94 $z 0 $units meterPixels

# alternately, maye we should just have a generalized thing to read, since all
# the patch attributes are the same whether or not it is digital or analong. InputChannel? like this:
ichannel.i2 = $iodevice phoenix1 $patch 2 $tags i1 $x 623.18 $y 11.94 $z 0 $units meterPixels

# The actual ichannel you'd access from the IOManager would look like this:
public class InputChannel {

    public enum DataType {BOOLEAN, BYTE, SHORT, INTEGER};
    private Object value;

    public Object getInput(){
        return value;
    }

    public int getDataType(){
        if (Object instanceof Boolean){
            return BOOLEAN;
        } else if (Object instanceof Byte){
            return BYTE;
        } else if (Object instanceof Short){
            return SHORT;
        } else if (Object instanceof Integer){
            return INTEGER;
        }
    }

    public InputChannel(Boolean b){
        value = b;
    }
    public InputChannel(Byte b){
        value = b;
    }
    public InputChannel(Short s){
        value = s;
    }
    public InputChannel(Integer i){
        value = i;
    }
}