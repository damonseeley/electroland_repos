//transP0x=253
//transP0y=0
//transP1x=610.928
//transP1y=209
//transP2x=356.928
//transP2y=519.278
//transP3x=0
//transP3y=267.278

//exclusionZones = 100,100,200,200
offsetY = 1000

// these all should be true
// for actual run
render = true
audioOn = true
useTracking = false
sendDMX = false


fullscreen = true
topdown = false


minFPS = 24
maxFPS = 80


targetFile = targets.txt
lightsFile = lights.txt
dataEnablersFile = dataEnablers.txt

moderatorIP = 192.168.247.2

// start up with lights off
forceLightsOn = false

// reative path to restart.bat
restartBatFile = restart.bat
//ftpBatFile = ftpRunner.bat
ftpBatFile = foo.bat

//relative path to executable from restat.bat
// probably should just be rocklights.exe for install 
//used for restart (test with alt-q)
executablePath = Debug\rocklights.exe

// light on (if not already on) and off time in 24h format
// times must be at least 2 minutes apart
hourOn = 4
minOn = 30

hourOff = 1
minOff = 45

// restart time (restarts program, not computer)
hourRestart = 3
minRestart = 30


// assume inches in the light.txt (and target.txt) file and size setting below
lightWidth = 6
lightHeight = 12
targetRadius = 8
// convert inches to cm (native is cm)
lightScale = 2.54

// logo location in screen coords
// logo must be a targa file (alpha ok) and be called logo.tga
// will scale so you problaby want logoLeft to be logoRight-width
// and logoTop to be logoBot-width
logoBot = 768
logoRight = 1024
logoLeft = 824
logoTop = 668

// How often should stats be printed out to log (in minutes)
reportStatsInterval = 15;

// If the moderator doesn't send ANY updates in this long
// assume that the moderator is down and send an error
// only works while lights are on
// (in HOURS)
reportModeratorEmptyRoomErrorInterval = 3

// scale x and y coming in from tracking system
// the numbers can be generated by pressing s 
// while standing under ceiling pixel 18, 10
// (make sure that one person is the most SE person in the room)
offsetX = -20
scaleX = 1.0
scaleY = 1.05

// percentage of the gap a person has to cross before transtioning to 
// being in new column and row
pixelStickyness = .9


// when a col/row changes there is a quick cross fade between lit pixels
// this sets the time it takes for that cross fade
pixelCrossFadeTime = 200


// time it take to transition between patterns
transitionCrossFadeTime = 1000

// no longer used
// test transition
// empty, populated crowded
//
//emptyToPopulated = 1
//populatedToCrowded = 20
//populatedToEmpty = 0
//crowdedToPopulated = 17
//mixedAvatars = true
// time between intermissions/ads/freak-outs (in usecs - 1000 usec = 1 s)
//intermissionSpacing = 45000
// tartgetflash intermission time (time to flash the targets)
// 30 secs
//targetFlashIntTime = 7000
//targetFlashHoldTime = 50



// distance square in cm underwhich a person is considered next to a panel
// not used for A (the ceiling)
// make exit greater than enter to make it sticky (so they don't blink due to 
// tracking jitter
pilDistSquaredEnter = 4032.25
pilDistSquaredExit = 8361.2736



pillarLightSpeed = 20


avatarCycleTime = 10000
avatarTailHold = 750


// NEW PATTERN DEFS
// Empty  (REALLY START STATE)
EmptyLowTresh = -1
EmptyLowTransToName = NONE
EmptyHighTresh = 0
EmptyHighTransToName = SmallPop
//EmptyHighTransToName = Sonar
EmptyLifeTime = 40000 // time to intermissions
EmptyTimeTransToName = TargetTron,TargetTronWisp,TargetFlash
EmptyAvatar = NONE
EmptyAmbient = AmbRedStick
EmptyTransSpeed = 1000
// controls the density of the red sticks by scaling time pixels are off
// less than 1.0 is more dense, greater than 1.0 is less dense
// is state specific (ie you can have FooRedStickDensityScalor)
EmptyRedStickDensityScalor = 1.5
EmptyTrargetDensityScalor = .5
EmptyRedStickSpeedScalor = .25


//SmallPop
SmallPopLowTresh = 1
SmallPopLowTransToName = Empty
SmallPopHighTresh = 10
SmallPopHighTransToName = Sonar
//SmallPopLifeTime = 300000 // five minues
//SmallPopLifeTime = 30000 // five minues
//SmallPopTimeTransToName = MultiWave
//SmallPopAvatar = SinglePixelDance
SmallPopAvatar = NONE
// SmallPopAvatar = AV1Square
// for sounds if you don't want one
// either leave it blank or use 
SmallPopEnterSound = ding.wav,ping.wav
SmallPopExitSound = ding.wav,ping.wav
SmallPopAmbientSound = ping.wav
SmallPopAmbientSoundLoop = -1
//SmallPopAmbientSoundStopImmediate = true
SmallPopBlinkOnTime = 50
SmallPopBlinkOffTime = 10
SmallPopBlinkTimes = 10
SmallPopIntraBlinkDelay = 1000
//SmallPopBlinkSounds = ping.wav,ding.wav,_S_
SmallPopMoveSound = ""
SmallPopEnterSoundLoop = 1
SmallPopOverheadPat = BlueLineKOH,BlueLineKOV
SmallPopMovePat = NONE
SmallPopEnterPat = FlashBlock
SmallPopAmbient = BlinkTag
SmallPopTransSpeed = 0
SmallPopTailDelay = 0
//SmallPopAmbient = NONE
//SmallPopPillarMode = -1



HighPopLowTresh = 3
HighPopLowTransToName = SmallPop
HighPopHighTresh = -1
HighPopHighTransToName = NONE
//HighPopLifeTime = 300000 // five minues
//HighPopTimeTransToName = Sonar,MultiWave,WillyWonka
//HighPopAmbient = AmbBlueGreenSea
HighPopAvatar = PlusSign
HighPopTransSpeed = 0
HighPopTailDelay = 0

//Sonar
SonarLowTresh = 1
SonarLowTransToName = Empty
SonarHighTresh = -1
SonarHighTransToName = NONE
SonarLifeTime = 20000 // 20 second
SonarTimeTransToName = BACK
SonarAvatar = SonarPinger
SonarOverheadPat = NONE
//SonarAmbient = GreenWave
SonarAmbient = Composer
// will composer will compose all in list
SonarAmbients = GreenWave,GreenWave
SonarTailDelay = 0 
SonarGreenWaveMsPerStick = 1
SonarGreenWaveWidth = 5

//WillyWonka
WillyWonkaLowTresh = -1
WillyWonkaHighTresh = -1
WillyWonkaAvatar = GENERIC
WillyWonkaOverheadPat = TotalSquareKnockOut
WillyWonkaTailDelay = 0;
WillyWonkaAmbient = WillyWonka
WillyWonkaLifeTime = 10000
WillyWonkaTimeTransToName = BACK
WillyWonkaPillarMode = 0


//TargetTron
TargetTronLowThresh = -1
TargetTronHighThresh = -1
TargetTronLifeTime = 3600000
// LifeTime set to MAX_INT will be timed out by target tron ambient pattern
TargetTronTimeTransToName = BACK
TargetTronAvatar = NONE
TargetTronAmbient = TargetTron
TargetTronTronMSPerSquare = 100
TargetTronTronTailLength = -1

//TargetTron
TargetTronWispLowThresh = -1
TargetTronWispHighThresh = -1
TargetTronWispLifeTime = 3600000
// LifeTime set to MAX_INT will be timed out by target tron ambient pattern
TargetTronWispTimeTransToName = BACK
TargetTronWispAvatar = NONE
TargetTronWispAmbient = TargetTron
TargetTronWispTronMSPerSquare = 15
TargetTronWispTronTailLength = 4

MultiWaveAvatar = GENERIC
MultiWaveOverheadPat = RedSqure,BlueSquare,GreenSquare
MultiWaveTailDelay = 0;
MultiWaveAmbient = Composer
// will composer will compose all in list
MultiWaveAmbients = GreenWave,BlueWave,RedWave
MultiWaveWaveMsPerStick = 3;
MultiWaveGreenWaveMsPerStick = 0
MultiWaveGreenWaveStepSize = 2
MultiWaveGreenWaveWidth = 60
MultiWaveBlueWaveMsPerStick = 1
MultiWaveGreenWaveStepSize = 4
MultiWaveBlueWaveWidth = 100
MultiWaveRedWaveMsPerStick = 0
MultiWaveGreenWaveStepSize = 3
MultiWaveRedWaveWidth = 40
MultiWaveLifeTime = 30000
MultiWaveTimeTransToName = BACK
MultiWaveAfterTimePause = 5000
MultiWaveCompDelay = 0

WashBangLowThresh = -1
WashBangHighThresh = -1
// speed scale 2 is twice as fast, .5 half as fast,
// be sure to adjust LifeTime accourdingly
WashBangWashSpeedScale = 1.0
WashBangWashCutShort = 2000
WashBangLifeTime = 10000; //at normal speed col wash taks about 8 secs
WashBangTimeTransToName = BACK
WashBangAvatar = NONE
WashBangAmbient = WashBang

FlasherLowThresh = -1
FlasherHighThresh = -1
// speed scale 2 is twice as fast, .5 half as fast,
// be sure to adjust LifeTime accourdingly
FlasherLifeTime = 10000; //at normal speed col wash taks about 8 secs
FlasherTimeTransToName = BACK
FlasherAvatar = NONE
FlasherAmbient = BGFlasher
FlasherFlashProb = .05 // prob of flash per attemp
FlasherFlashAttemps = 100 // attemps per frame

TargetFlashLowThresh = -1
TargetFlashHighThresh = -1
// speed scale 2 is twice as fast, .5 half as fast,
// be sure to adjust LifeTime accourdingly
TargetFlashLifeTime = 7000; 
TargetFlashTimeTransToName = BACK
TargetFlashAvatar = NONE
TargetFlashAmbient = TargetFlash
TargetFlashTargetFlashHoldTime = 50

ColorWashLowTresh = 1
ColorWashLowTransToName = Empty
ColorWashAmbient = ColorWash
ColorWashColorWashLoop = true
ColorWashColorWash = 255,0,0,0,0,255,5000
ColorWashTransSpeed = 0