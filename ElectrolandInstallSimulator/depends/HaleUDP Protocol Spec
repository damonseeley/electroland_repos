-- Bradley, use this command byteProposed CMD byte for digital sensor return vals = 31 where 00=off FD=onEVERYTHING BELOW HERE IS STRAIGHT FROM THE ENTERACTIVE CONTROLLERSPEC AND CANNOT BE MODIFIED022309 version____________________________________________________________Update PWM Only:SIngle channel 6 Test = OK____________________________________________________________FF 00 FD FD FD FD FD FD FD FD FE [SEND] ; All OnFF 00 00 00 00 00 00 00 00 00 FE [SEND] ; All OffServer Send Bytes:0xFF // Start Byte0x00 // Command Byte0xZZ // PWM 10xZZ // PWM 20xZZ // PWM 30xZZ // PWM 40xZZ // PWM 50xZZ // PWM 60xZZ // PWM 70xZZ // PWM 8 ... can handle up to 176 multicasted bytes0xFE // Stop ByteController Return Bytes:None____________________________________________________________Update PWM and return current state of sensors:SIngle channel 6 Test = OK____________________________________________________________FF 01 FD FD FD FD FD FD FD FD FE [SEND] ; All OnFF 01 00 00 00 00 00 00 00 00 FE [SEND] ; All OffServer Send Bytes:0xFF // Start Byte0x01 // Command Byte0xZZ // PWM 10xZZ // PWM 20xZZ // PWM 30xZZ // PWM 40xZZ // PWM 50xZZ // PWM 60xZZ // PWM 70xZZ // PWM 8 ... can handle up to 176 multicasted bytes0xFE // Stop ByteController Return Bytes:0xFF // Start Byte0x01 // Command Byte0xZZ // QT State Tile 10xZZ // QT State Tile 20xZZ // QT State Tile 30xZZ // QT State Tile 40xZZ // QT State Tile 50xZZ // QT State Tile 60xZZ // QT State Tile 70xZZ // QT State Tile 80xFE // Stop Byte____________________________________________________________Update PWM and return current state of sensors only if thestate of any sensor has changed since last request:Single channel 6 Test = OK____________________________________________________________FF 02 FD FD FD FD FD FD FD FD FE [SEND]Server Send Bytes:0xFF // Start Byte0x02 // Command Byte0xZZ // PWM 10xZZ // PWM 20xZZ // PWM 30xZZ // PWM 40xZZ // PWM 50xZZ // PWM 60xZZ // PWM 70xZZ // PWM 8 ... can handle up to 176 multicasted bytes0xFE // Stop ByteController Return Bytes:0xFF // Start Byte0x01 // Command Byte / responds with an 0x01, regardless if it was polled, or poled for a state change.0xZZ // QT State Tile 10xZZ // QT State Tile 20xZZ // QT State Tile 30xZZ // QT State Tile 40xZZ // QT State Tile 50xZZ // QT State Tile 60xZZ // QT State Tile 70xZZ // QT State Tile 80xFE // Stop Byte____________________________________________________________Enable / Disable Tiles, Recalibrate Sensor(s):Single channel 6 Test = OK____________________________________________________________FF 11 FD FD FD FD FD FD FD FD FE [SEND]Server Send Bytes:0xFF // Start Byte0x11 // Command Byte0xZZ // 0xFD to turn Tile 1 On, 0x00 to turn Tile 1 off0xZZ // 0xFD to turn Tile 2 On, 0x00 to turn Tile 2 off0xZZ // 0xFD to turn Tile 3 On, 0x00 to turn Tile 3 off0xZZ // 0xFD to turn Tile 4 On, 0x00 to turn Tile 4 off0xZZ // 0xFD to turn Tile 5 On, 0x00 to turn Tile 5 off0xZZ // 0xFD to turn Tile 6 On, 0x00 to turn Tile 6 off0xZZ // 0xFD to turn Tile 7 On, 0x00 to turn Tile 7 off0xZZ // 0xFD to turn Tile 8 On, 0x00 to turn Tile 8 off0xFE // Stop ByteController Return Bytes:0xFF // Start Byte0x11 // Command Byte0xZZ // 0xFD Tile 1 is On, 0x00 Tile 1 is Off0xZZ // 0xFD Tile 2 is On, 0x00 Tile 2 is Off0xZZ // 0xFD Tile 3 is On, 0x00 Tile 3 is Off0xZZ // 0xFD Tile 4 is On, 0x00 Tile 4 is Off0xZZ // 0xFD Tile 5 is On, 0x00 Tile 5 is Off0xZZ // 0xFD Tile 6 is On, 0x00 Tile 6 is Off0xZZ // 0xFD Tile 7 is On, 0x00 Tile 7 is Off0xZZ // 0xFD Tile 8 is On, 0x00 Tile 8 is Off0xFE // Stop Byte____________________________________________________________Enable/Disable continious sensor state change reporting____________________________________________________________Server Send Bytes:0xFF // Start Byte0x20 // Command Byte0xZZ // 0x00 = OFF, 0xFD = ON0xZZ // Filler Byte / Dont Care0xZZ // Filler Byte / Dont Care0xZZ // Filler Byte / Dont Care0xZZ // Filler Byte / Dont Care0xZZ // Filler Byte / Dont Care0xZZ // Filler Byte / Dont Care0xZZ // Filler Byte / Dont Care0xFE // Stop ByteController Return Bytes:0xFF // Start Byte0x20 // Command Byte0xZZ // QT State Tile 10xZZ // QT State Tile 20xZZ // QT State Tile 30xZZ // QT State Tile 40xZZ // QT State Tile 50xZZ // QT State Tile 60xZZ // QT State Tile 70xZZ // QT State Tile 80xFE // Stop Byte____________________________________________________________Set Tile Controller Offset:The 2 bytes are added together to obtain the address since0xFE and FF are not allowed.Test = OK____________________________________________________________FF 80 00 00 FE [SEND] ; Set controller offset to zeroServer Send Bytes:0xFF // Start Byte0x80 // Command Byte0xYY // Offset value MSB0xZZ // Offset value LSB0xFE // Stop ByteController Return Bytes:0xFF // Start Byte0x80 // Command Byte0xYY // Offset value MSB0xZZ // Offset value LSB0xFE // Stop Byte____________________________________________________________Force Microcontroller ResetThis places the MCU in a Halt state and waits for the WDRto reset the MCUTest = OK, must disconnect debugger for it to work____________________________________________________________FF 88 AA 55 FE [SEND] ; Set controller offset to zeroServer Send Bytes:0xFF // Start Byte0x88 // Command Byte0xYY // Arbitrary Value of 0xAA0xZZ // Arbitrary Value of 0x550xFE // Stop ByteController Return Bytes:0xFF // Start Byte0x88 // Command Byte0xYY // Firmware revision MSB0xZZ // Firmware revision LSB0xYY // Firmware Date Month0xZZ // Firmware Date Day0xYY // Firmware Date Year0xFE // Stop Byte