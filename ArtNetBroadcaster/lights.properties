# The system frame rate. If this is not specified, the default is 30.
fps = 30

# These three properties should be used sparingly,  They are really for tuning
# the system if you accidentally spec'd the rasters and detectors to dimensions
# that turn out to be too big for your desired performance.

# Scales the positions of each detector. Default is 1.0 when not specified.
detectorPositionScaling = 1.0

# Scales the dimensions of each detector. Default is 1.0 when not specified.
detectorDimensionScaling = 1.0

# Scales the dimensions of each raster. Default is 1.0 when not specified.
rasterDimensionScaling = 1.0

# The following objects define the relationships between detectors and the
# packets to be generated.  There are primarily three objects: rasters, 
# recipients, and detectors.  
# A raster is really just a "preferred" size for any given recipient.  E.g., 
# it's the size raster you should generate if you want to sync with this raster 
# for best results.  Ideally, you want to make sure whatever raster size you set 
# is large enough to bound all the detectors bound to your recipient.
#
# A recipient represents a single receiever on the network of a packet of data.
# Each recipient has a set number of channels, with each channel (presumably)
# tied to a detector.
#
# A detector is an area on a raster encompassing some pixels. When you call
# sync on a recipient, the detector will grab all the pixels from the Raster
# object it was passed, transform all of the pixels into a single byte value, 
# and then plug that value into the channel specified by that recipient.
#
# The relationship between recipients and detectors is this: Any detector has
# to be "plugged" into a channel in a detector. You can do this one of two ways.
# Either you can use channel groups, or you can use channel objects.  Channel
# objects are more granular.  when you specify a channel object, you simply
# state which detector is tied to which recipient, and on what channel.  Channel
# groups enable you to short cut this process if it is a common pattern, 
# repeated.  In order to use a channel group, each detector in the group MUST
# be plugged into the exact same channel for each recipient that is a member
# of the group.

# Rasters
#	raster.id = -width [width] -height [height]
# examples:
raster.myRaster = -width 100 -height 100
raster.myOtherRaster = -width 100 -height 50

# Recipients
#	recipient.id = -protocol ARTNET -channels [channels] -address [ip] -universe [universe] -channelgroup [group name] -defaultRaster raster.id
#	recipient.id = -protocol HALEUDP -channels [channels -address [ip] -port [port] -channelgroup [group name] -defaultRaster raster.id
# examples:
recipient.wall = -protocol ARTNET -channels 100 -address 127.0.0.1 -universe 1 -channelgroup "group 1" -defaultRaster myRaster
recipient.wall2 = -protocol ARTNET -channels 100 -address 127.0.0.1 -universe 2 -defaultRaster myRaster
recipient.floor = -protocol HALEUDP -channels 120 - address 127.0.0.2 - port 100 -channelgroup "group 2" -defaultRaster myRaster

# Detectors
#	detector.id = -boundary [boundary object] -model [model classpath] -lightgroup [group name] [channel]
# note: if you use specify a channel group you MUST include the channel. 
# examples:
detector.d1 = -boundary rectangle(0,0,100,100) -model net.electroland.detector.DetectionModel.RedDetectionModel -lightgroup "group 1" 0
detector.d2 = -boundary rectangle(10,10,100,100) -model net.electroland.detector.DetectionModel.ThresholdDetectionModel

# Channels
#	channel.id = -channel [channel] -recipient recipient.id -detector detector.id
# examples:
channel.0 = -channel 0 -recipient wall -detector d1