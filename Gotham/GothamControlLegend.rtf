{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww18380\viewh12380\viewkind0
\deftab720
\pard\tx720\pardeftab720

\f0\b\fs26 \cf2 \cb3 Feb 4 2013 Gotham Control Legend\
\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf2 {\listtext	\'95	}cohesiveness
\b0 \'a0- This is how strongly the balls within a single ball group are attracted (positive values) or repel (negative) each other. These forces degrade by distance squared.\
\ls1\ilvl0
\b {\listtext	\'95	}ballToBallRepell
\b0 \'a0- This is how strongly every single ball repels or attracts every other ball. These forces degrade by distance squared. I consistently spell "repel" incorrectly.\
\ls1\ilvl0
\b {\listtext	\'95	}repellForce
\b0 \'a0- This is the force that each occupied space on the grid exerts on each ball. \'a0Distance squared.\
\ls1\ilvl0
\b {\listtext	\'95	}repellVelocityCoefficient
\b0 \'a0- This is a multiplier applied to maxVelocity that increases with the number of occupied spaces on the grid. In otherwords, the more human activity there is, the faster that balls are allowed to breach the maxVelocity barrier (as applied by the repellForce).\
\ls1\ilvl0
\b {\listtext	\'95	}jetForceScale
\b0 \'a0- Multiplier applied to each jet's force. Since each jet can have it's own force, I opted not to have a separate slider per jet, and instead to have this multiplier to scale them all up/down together.\
\ls1\ilvl0
\b {\listtext	\'95	}windForceScale
\b0 \'a0- Multiplier applied to each wind's force. Similar issue to jets: since there each wind has its own force, its easier to have a uniform scaling value on one slider than separate sliders per wind.\
\ls1\ilvl0
\b {\listtext	\'95	}friction
\b0 \'a0- How much each ball is slowed down or sped up (or neither) per frame. \'a0friction of .5 means that its velocity will be halved per frame (in the absence of any other forces). 1.0 is frictionless.\
\ls1\ilvl0
\b {\listtext	\'95	}minVelocity
\b0 \'a0- The slowest any ball can move. 1.0 = 1 pixel per frame.\
\ls1\ilvl0
\b {\listtext	\'95	}maxVelocity
\b0 \'a0- The fastest any ball can move in the absence of occupied grids. Same scale as minVelocity: 1.0 = 1 pixel per frame.\
\ls1\ilvl0
\b {\listtext	\'95	}margin
\b0 \'a0- Constant inset (or outset) from the render canvas that defines the maximum space within which balls can roam. The boundary is applied to the centers of each ball.\
\ls1\ilvl0
\b {\listtext	\'95	}hueVariance
\b0 \'a0- When the screen initializes, the range the individual balls in a group may vary in hue. Has no effect in real-time, so the slider isn't actually useful.\
\ls1\ilvl0
\b {\listtext	\'95	}ballScale
\b0 \'a0- Scaling factor for all the balls.\
\ls1\ilvl0
\b {\listtext	\'95	}ballOpacity
\b0 \'a0- Alpha for all the balls.\'a0\
\ls1\ilvl0
\b {\listtext	\'95	}presenceRadius
\b0 \'a0- The dimensions of the ellipse rendered for each occupied grid.\
\ls1\ilvl0
\b {\listtext	\'95	}presenceOpacity
\b0 \'a0- The opacity of the ellipse rendered for each occupied grid.\
\ls1\ilvl0
\b {\listtext	\'95	}gridHistory
\b0 \'a0- The total number of frames of grid history stored in memory, and successively rendered on top of each other. Despite the decimal in the slider, this is rounded to an integer.\
\ls1\ilvl0
\b {\listtext	\'95	}blur
\b0 \'a0- The degree of blurring applied to the final image.\
\ls1\ilvl0
\b {\listtext	\'95	}hour
\b0 \'a0- Used in conjunction with "useTimeSlider". \'a0If useTimeSlider == true, then this slider simulates the age in minutes of the day to represent. 0 = midnight, 1440 = 24 hours later.\
\ls1\ilvl0
\b {\listtext	\'95	}centerForce
\b0 \'a0- This is repel/attraction force between the center of the screen and each ball. Distance squared. I believe there are currently two bugs in this algorithm. First, when a ball is exactly on top of the center, the force is incorrectly calculated (the handling of the div by zero result of distance being zero is wrong). Second, the force is to the absolute center of the screen, rather the center of the render canvas.\
}