#global settings
settings.global = $fps 33 $width 635 $height 16

#sound.globalsounds = $soundfiles 

# no_spaces_allowed
sound.gen-small = $soundfiles lumen_entrance7.wav,entrance6.wav,entrance6_short.wav
sound.gen-small2 = $soundfiles marimba_mid_01a.wav,marimba_mid_01b.wav,marimba_mid_02a.wav,marimba_mid_02b.wav,marimba_mid_03a.wav,marimba_mid_03b.wav
sound.gen-small3 = $soundfiles marimba_mid_04a.wav,marimba_mid_04b.wav,marimba_mid_05a.wav,marimba_mid_05b.wav,marimba_mid_06a.wav,marimba_mid_06b.wav
sound.gen-small4 = $soundfiles UprightJazzBassBlues_a.wav,UprightJazzBassBlues_b.wav,UprightJazzBassBlues_c.wav,UprightJazzBassBlues_d.wav,UprightJazzBassBlues_e.wav,UprightJazzBassBlues_f.wav,UprightJazzBassBlues_g.wav
sound.gen-small5 = $soundfiles CarribeanVibraphoneBlues_a.wav,CarribeanVibraphoneBlues_b.wav,CarribeanVibraphoneBlues_c.wav,CarribeanVibraphoneBlues_d.wav,CarribeanVibraphoneBlues_e.wav,CarribeanVibraphoneBlues_f.wav,CarribeanVibraphoneBlues_g.wav

sound.gen-may-grow =  $soundfiles highlight_22.wav,highlight_13.wav
sound.gen-may-boomerang =  $soundfiles vert_disconnect_long_whoosh03.wav
sound.gen-may-wave =  $soundfiles kotu_01.wav,kotu_02.wav,kotu_03.wav,kotu_04.wav,kotu_05.wav
sound.gen-may-randombars =  $soundfiles vert_connect_med_whoosh16.wav,vert_connect_med_whoosh16_long.wav
sound.gen-may-bigpiano =  $soundfiles piano_doublet01.wav,EchoPiano1.wav,EchoPiano2.wav,EchoPiano3.wav
sound.gen-may-bighit =  $soundfiles 66_Reverse_Orchestra_Hit.wav
sound.gen-may-thunder =  $soundfiles thunder_15_short.wav,chime01_med.wav,EIA_organ_v01short.wav,EIA_organ_v01.wav

sound.screensaver = $soundfiles screensaver_ds_beat2-45-5.wav


#sound.gen-kotu = $soundfiles kotu_01.wav,kotu_02.wav,kotu_03.wav,kotu_04.wav,kotu_05.wav
#sound.gen-elevation = $soundfiles elevation_01.wav,elevation_02.wav,elevation_03.wav,elevation_04.wav,elevation_05.wav
#sound.gen-bondi = $soundfiles bondi_01.wav,bondi_02.wav,bondi_03.wav,bondi_04.wav,bondi_05.wav
#sound.gen-marimba_high = $soundfiles marimba_high_01.wav,marimba_high_02.wav,marimba_high_03.wav,marimba_high_04.wav,marimba_high_05.wav,marimba_high_06.wav
#sound.gen-marimba_mid = $soundfiles marimba_mid_01.wav,marimba_mid_02.wav,marimba_mid_03.wav,marimba_mid_04.wav,marimba_mid_05.wav,marimba_mid_06.wav

# class, width, height are required by all Clips.  Class is the actual clip
# class. width and height define the dimensions of the image that will be 
# passed in to getFrame().
# fps and root are for ImageClip only.
# root is the directory that contains all of the image data.
# fps is the natural rate at which these images should be rotated.  E.g, if
# we double the global framerate, the images shouldn't advance any more quickly.

content.sparkleThunder = $class net.electroland.edmonton.content.MegaSparkleContent $width 635 $height 16 $sparkleWidth 3 $sparkleTime 100
content.sparkleDoublet = $class net.electroland.edmonton.content.MegaSparkleContent $width 32 $height 4 $sparkleWidth 2 $sparkleTime 100
content.sparkleClipFast = $class net.electroland.edmonton.content.MegaSparkleContent $width 635 $height 16 $sparkleWidth 3 $sparkleTime 750
content.sparkleClipSaver = $class net.electroland.edmonton.content.MegaSparkleContent $width 635 $height 16 $sparkleWidth 3 $sparkleTime 3000
content.sparkleClipSaver2 = $class net.electroland.edmonton.content.MegaSparkleContent2 $width 635 $height 16 $sparkleWidth 3 $sparkleTime 1500
content.waveImage = $class net.electroland.ea.content.ImageContent $file sprites/gradWave128x16.png
content.megaWave = $class net.electroland.ea.content.ImageContent $file sprites/gradWave256.png
content.blurSquare32 = $class net.electroland.ea.content.ImageContent $file sprites/blurSquare32.png
content.blurSquare16 = $class net.electroland.ea.content.ImageContent $file sprites/blurSquare16.png
content.blurSquare64grad = $class net.electroland.ea.content.ImageContent $file sprites/blurSquare64grad.png

#content.stateToBrightness = $class net.electroland.edmonton.content.StateToBrightnessClip $width 635 $height 16
#content.stateToBrightnessImage = $class net.electroland.edmonton.content.StateToBrightnessImageClip $width 635 $height 16 $file depends/sprites/square11x16.png







###### not supported yet.
# will supports x, y, w, h, dx, dy, dw, dh, alpha, dalpha, duration, delay
#  and (after we support clip rect) clipX, clipY, clipW, clipH and dclipX...
# change.shrink = $x 10 $y 10...