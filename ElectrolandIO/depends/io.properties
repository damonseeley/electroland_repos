#global settings
settings.global = $pollrate 30

# type definition
#  in this cse, phoenix
iodeviceType.phoenix4DI8DO = $factory net.electroland.eio.devices.ModBusTCPSlaveDeviceFactory

# input registers and patches (these are specific to ModBusTCPSlaveDeviceFactory)
# a register is anything whose name begins with "register".
# a patch is anything whose name begins with "patch".
# position in the response packet is startRef + bit.  
# the first bit is 0, so startRef 0 + bit 0 is the first bit.
# length is the word length, but 1 is the only legal value right now.
phoenix4DI8DO.register.1 = $startRef 0 $length 1

#port 1 = input 1, port 2 = input 2, etc.
# This patches each bit from a register to an abstract port.
phoenix4DI8DO.patch.8 = $register register.1 $bit 8 $port 1
phoenix4DI8DO.patch.9 = $register register.1 $bit 9 $port 2
phoenix4DI8DO.patch.10 = $register register.1 $bit 10 $port 3
phoenix4DI8DO.patch.11 = $register register.1 $bit 11 $port 4
phoenix4DI8DO.patch.12 = $register register.1 $bit 12 $port 5
phoenix4DI8DO.patch.13 = $register register.1 $bit 13 $port 6
phoenix4DI8DO.patch.14 = $register register.1 $bit 14 $port 7
phoenix4DI8DO.patch.15 = $register register.1 $bit 15 $port 8

# concrete instances of Phoenix bus coupler
iodevice.phoenix1 = $type phoenix4DI8DO $ipaddress 192.168.247.61
iodevice.phoenix2 = $type phoenix4DI8DO $ipaddress 192.168.247.62
iodevice.phoenix3 = $type phoenix4DI8DO $ipaddress 192.168.247.63
iodevice.phoenix4 = $type phoenix4DI8DO $ipaddress 192.168.247.63
iodevice.phoenix5 = $type phoenix4DI8DO $ipaddress 192.168.247.65
iodevice.phoenix6 = $type phoenix4DI8DO $ipaddress 192.168.247.66
iodevice.phoenix7 = $type phoenix4DI8DO $ipaddress 192.168.247.67
iodevice.phoenix8 = $type phoenix4DI8DO $ipaddress 192.168.247.68
iodevice.phoenix9 = $type phoenix4DI8DO $ipaddress 192.168.247.69
iodevice.phoenix10 = $type phoenix4DI8DO $ipaddress 192.168.247.70
iodevice.phoenix11 = $type phoenix4DI8DO $ipaddress 192.168.247.71

# 60 fps means 15 samples in 1/4 second delay.
iofilter.boxcar $class net.electroland.eio.filters.BoxcarFilter $samples 15
iofilter.doff $class net.electroland.eio.filters.DelayedOffFilter $millis 500

# each state represents an object that we can "subscribe" to.  Each state is tied to a port on a device.
istate.1-1 = $iodevice phoenix0 $port 1 $tags 1,ALL $x 1 $y 1 $z 1 $units meters $filters
istate.1-2 = $iodevice phoenix0 $port 2 $tags 2,ALL $x 2 $y 2 $z 2 $units meters $filters


