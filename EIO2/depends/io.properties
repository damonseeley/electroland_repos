# concrete instances of Phoenix bus coupler. 
#  Type definition is class behind $factory
#  address is the IP location of the bus coupler
#  endianness will probably always be BIG
#  startRef if the offset to the data section of the response
#  totalRegisters is the total number of 16 bit registers to read
#  totalChannels is the size of the InputChannel array that patches are going to.
iodevice.phoenix1 = $factory net.electroland.eio.devices.ModBusTCPSlaveDeviceFactory $address 192.168.247.21 $startRef 192 $totalRegisters 4 $totalChannels 4 $endianness BIG
iodevice.phoenix2 = $factory net.electroland.eio.devices.ModBusTCPSlaveDeviceFactory $address 192.168.247.22 $startRef 192 $totalRegisters 4 $totalChannels 4 $endianness BIG

# InputChannel mappings (first bus coupler has 5 channels because we split channel one into two bytes)
# first byte in a register
ichannel.ic0 = $device phoenix1 $register 0 $datatype BYTE1 $x 0 $y .5 $z 0 $units meterPixels $filters boxcar
# second byte in a register
ichannel.ic1 = $device phoenix1 $register 0 $datatype BYTE2 $x 0 $y 1 $z 0 $units meterPixels $filters boxcar
# whole register as a 16bit short
ichannel.ic2 = $device phoenix1 $register 1 $datatype SHORT $x 0 $y 2 $z 0 $units meterPixels $filters doff,boxcar
# whole register as a 16bit, unsigned int
ichannel.ic3 = $device phoenix1 $register 2 $datatype UNINT $x 1 $y 3 $z 0 $units meterPixels $filters doff,boxcar
ichannel.ic4 = $device phoenix1 $register 3 $datatype UNINT $x 1 $y 4 $z 0 $units meterPixels $filters doff,boxcar

# second bus coupler
ichannel.ic5 = $device phoenix2 $register 0 $datatype SHORT $x 4 $y 1 $z 0 $units meterPixels $filters boxcar
ichannel.ic6 = $device phoenix2 $register 1 $datatype SHORT $x 4 $y 2 $z 0 $units meterPixels $filters boxcar
ichannel.ic7 = $device phoenix2 $register 2 $datatype SHORT $x 4 $y 3 $z 0 $units meterPixels $filters boxcar
ichannel.ic8 = $device phoenix2 $register 3 $datatype SHORT $x 4 $y 4 $z 0 $units meterPixels $filters boxcar

iofilter.boxcar  net.electroland.eio.filters.BoxcarFilter $samples 15
iofilter.doff  net.electroland.eio.filters.DelayedOffFilter $millis 500
iofilter.toBool  net.electroland.eio.filters.ConvertToBoolean $threshold 15000