1.) ELU parse lights.properties (remaining: fixtures, canvasDetector)
2.) recipient.sync
3.) ELUCanvas.sync & allOn, allOff
4.) ElectrolandLightingManager.run and allOn, allOff
3.) ARTNetRecipient.send
5.) EluCanvas2D.sync
6.) basic GUI (including sweep, etc.)
7.) log4j
8.) test
9.) clean up


recipient
  protocol meta data
  array of channels where each channel has a pointer to a CanvasDetector

Canvas
  array of CanvasDetectors
  
CanvasDetector
  array of Canvas image array index locations that should be part of the evaluation process
  detector model
  geometry
  latest evaluated state
  tags
  
  
  
  
read all recipients
- store as recipient with empty array of channels

read all fixtureTypes






Recipient
- array of CanvasDetectors

CanvasDetector =
  get each fixture to canvas mapping
  get the fixtureType, start byte, and tags for each fixture
  get the channel number, shape, detection model for each detector in that fixtureType
  


Synching:
For each Recipient
  find out what fixture + fixtureType is mapped there
    for that find the canvas that holds that fixture
      get the evaluated values of each detector on that canvas (update the canvas)
        canvas holds a fixture + fixtureType + translation data
          use the fixtureTypes and translation data to iterate through each detector
            find out which pixels the detector covers
              evaluate
                return an EvaluatedDetector (translated coordinates, color) <-- this should be stored

updating a fixture (different startAddress)
updating a fixturetype (anything)

  