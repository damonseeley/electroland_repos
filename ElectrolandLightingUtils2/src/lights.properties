#Frame rate.
fps = 33

# create RECIPIENTS (first is ARTNet, second is HaleUDP)
recipient.datagate1 = -class net.electroland.utils.lighting.protocols.ARTNetRecipient -channels 512 -channelBits 8 -address 127.0.0.1 -universe 1
#recipient.hale = -class net.electroland.util.lighting.protocols.HaleUDPRecipient -channels 300 channelBits 8 -address com1 -rate 30


# define a geometric layout of detectors channels for a TYPE of FIXTURE (three detectors bound to four 2 pixel on a side detectors in a row for this type)
fixtureType.PhilipsLEDBar = -channels 3
fixtureType.PhilipsLEDBar.channels[0] = -boundary rectangle(0,0,2,2) -model net.electroland.lighting.detector.models.RedDetectionModel
fixtureType.PhilipsLEDBar.channels[1] = -boundary rectangle(2,0,2,2) -model net.electroland.lighting.detector.models.GreenDetectionModel
fixtureType.PhilipsLEDBar.channels[2] = -boundary rectangle(4,0,2,2) -model net.electroland.lighting.detector.models.BlueDetectionModel


# create FIXTURES (concrete instance of the a fixtureType, that is actually connected to a hardware recipient).
# tags can be used for macros like "turn on all mac:00:00:00" or "turn off f1"
# note that these are bound to recipients and fixtureTypes
fixture.f1 = -type PhilipsLEDBar -startAddress 0 -tags "mac:00:00:00 f1" -recipient datagate1
fixture.f2 = -type PhilipsLEDBar -startAddress 3 -tags "mac:00:00:00 f2" -recipient hale


# create a 2 dimensional CANVS to paint on
canvas.my2d = -class net.electroland.utils.lighting.canvas.ELUCanvas2D -height 2 -width 16

# MAP fixtures onto the canvas (translate the second 1, keep both the same scale)
canvas.my2d.fixtures[0] = -fixture f1 -x 0 -y 0 -xScale 1.0 -yScale 1.0
canvas.my2d.fixtures[1] = -fixture f2 -x 3 -y 0 -xScale 1.0 -yScale 1.0


# create a 3 dimensional canvas to paint on
canvas.my3d = -class net.electroland.utils.lighting.canvas.ELUCanvas3D -height 100 -width 100 -depth 100 -origin 50,50

canvas.my3d.fixtures[0] = -fixture f1 -x 0 -y 0 -z etc.
canvas.my3d.fixtures[1] = -fixture f2 -x 3 -y 0 -z etc.