package net.electroland.flash.pool.creatures{	import flash.display.*;	import flash.net.*;	import flash.events.*;	import net.electroland.flash.pool.*;	import net.electroland.flash.utilz.*;	public class CreatureClass implements Creature	{		public var environment:Environment;		public var fishSWF:Loader;		public var mcFishSymbol:MovieClip;		public var snd:SoundController;		public var media:MediaControl;		public var __onDeck:Number;		public var __running:Number;		public var isLoaded:Boolean = false;		public var isRunComplete:Boolean = false;		public var stFishSwf:String = "creatures/0TemplateFish.swf";		public function init(env:Environment):DisplayObject{			environment = env;			snd = new SoundController();			fishSWF = new Loader();			fishSWF.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS,LoadProgressHandler);			fishSWF.contentLoaderInfo.addEventListener(Event.COMPLETE,LoadCompleteHandler);			fishSWF.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);			fishSWF.load(new URLRequest(environment.getMediaRoot() + stFishSwf));			return fishSWF;		}		public function setState(state:int){			__onDeck = state;			if(!isLoaded)			{				return;			}			if(__onDeck != __running)			{				if(!isRunComplete)				{					return;				}			}else{				return;			}			isRunComplete = false;			switch(state)			{				case 0: 					swim();				break;				case 1:					backup();				break;				case 2:					float();				break;				case 3:					sidle();				break;				case 4:					dart();				break;				case 5:					sink();				break;				case 6:					rise();				break;				case 7:					roll();				break;				case 8:					jump();				break;				default:					swim();				break;			}			__running = state;		}		private function RunCompleteHandler(evt:Event):void		{			isRunComplete = true;			setState(__onDeck);		}		public function setAccent(accent:int)		{			switch(accent)			{				case 0: 					touch();				break;				case 1:					blush();				break;				case 2:					plump();				break;				case 3:					throb();				break;				case 4:					shiver();				break;				case 5:					shimmer();				break;				case 6:					wave();				break;				case 7:					bubble();				break;				case 8:					puff();				break;				case 9:					inksquirt();				break;				case 10:					sting();				break;				case 11:					attach();				break;				case 12:					ripple();				break;				case 13:					die();				break;				default:					touch();				break;			}		}				public function activateVideo(src:String):void		{			media = new MediaControl(fishSWF.x-(fishSWF.width/1.5),fishSWF.y-(fishSWF.height/1.25));			media.init(environment.getMediaRoot(),src,fishSWF.parent);		}				public function setSpeedAndDepth(speed:Number, depth:Number){					}				private function ioErrorHandler(event:IOErrorEvent):void 		{			        }				private function LoadProgressHandler(evt:ProgressEvent):void		{						}		private function LoadCompleteHandler(evt:Event):void		{			var loaderInfo:LoaderInfo = evt.target as LoaderInfo;			mcFishSymbol = MovieClip(loaderInfo.content);			mcFishSymbol.addEventListener("onRunComplete",RunCompleteHandler);			mcFishSymbol.stop();			isLoaded = true;			isRunComplete = true;			setState(__onDeck);		}		//FISH STATES ------->>>>>>>		//Mostly controled via the timeline animation....				public function swim():void		{			// basic swim forward			mcFishSymbol.gotoAndPlay("swim");		}		public function backup():void		{			// do a quick tailflip to move back			mcFishSymbol.gotoAndPlay("backup");		}		public function float():void		{			mcFishSymbol.gotoAndPlay("float");			// no pos or z movement, only fin flicks		}		public function sidle():void		{			// side to side movement, = scuttle for crabs and stars		}		public function dart():void		{			// fast straight movement		}		public function sink():void		{		}		public function rise():void		{					}		public function roll():void		{			// barrel roll		}		public function jump():void		{			// jump out of the water		}				//FISH ACCENTS ------->>>>>>>>>>		//Mostly controled by AS effects				public function touch():void		{ 			// calls sound and other behaviors			snd.playSound(environment.getMediaRoot() + "soundfx/fpo.mp3");		}		public function blush():void		{ 			// creature might change colors, etc		}		public function plump():void		{ 			// plump up in size momentarily		}		public function throb():void		{		}		public function shiver():void		{		}		public function shimmer():void		{ 			// rattling of discs		}		public function wave():void		{ 			// for ray		}		public function bubble():void		{		}		public function puff():void		{		}		public function inksquirt():void		{		}		public function sting():void		{		}		public function attach():void		{ 			//  attaches this to that		}		public function ripple():void		{ 			// for inanimates		}		public function die():void		{ 			//  turns gray and decomposes :)		}	}	}