/** */package net.electroland.flash.utilz {		import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.net.URLRequest;	import flash.media.Sound;	import flash.events.IOErrorEvent;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	import flash.events.Event;	import flash.display.MovieClip;	/**	 * @author slamont	 */	public class SoundController {				public var debug:Boolean = false;				private var _muted:Boolean = false;		private var _volume:Number = 1;		private var loopChannel:SoundChannel = new SoundChannel();		private var loopSound:Sound = new Sound();		private var soundChannels:Array = new Array();				public function get muted():Boolean {			return _muted;		}				public function get volume():Number {			return _volume;		}				public function set volume(vol:Number):void {			_volume = vol;			setVolume(_volume);		}				public function mute():void {			var vol:Number = _muted ? _volume : 0;			setVolume(vol);			_muted = !_muted;		}				public function playLoop(url:String, loops:Number):void {			var vol:Number = !_muted ? _volume : 0;			var request:URLRequest = new URLRequest(url);						loopSound.addEventListener(IOErrorEvent.IO_ERROR, onIoError);			loopSound.load(request);						loopChannel = loopSound.play(0,loops);			var transform:SoundTransform = loopChannel.soundTransform;			transform.volume = vol;			loopChannel.soundTransform = transform;			loopChannel.addEventListener(Event.SOUND_COMPLETE, onLoopComplete);		}				public function playSound(url:String):void {			var vol:Number = !_muted ? _volume : 0;			var request:URLRequest = new URLRequest(url);			var sound:Sound = new Sound();						sound.addEventListener(IOErrorEvent.IO_ERROR, onIoError);			sound.load(request);						var channel:SoundChannel = sound.play();			var transform:SoundTransform = channel.soundTransform;			transform.volume = vol;			channel.soundTransform = transform;						channel.addEventListener(Event.SOUND_COMPLETE, onSoundComplete);			soundChannels.push(channel);		}				private function setVolume(vol:Number):void {			var loopTrans:SoundTransform = loopChannel.soundTransform;			loopTrans.volume = vol;			loopChannel.soundTransform = loopTrans;			for each ( var channel:SoundChannel in soundChannels ) {				var transform:SoundTransform = channel.soundTransform;				transform.volume = vol;				channel.soundTransform = transform;			}		}				public function SoundController() {					}				private function onIoError(event:IOErrorEvent):void {			if ( debug ) {				trace("IO Error: " + event.text);			}		}				private function onLoopComplete(event:Event):void {			trace("loop complete");			var vol:Number = !_muted ? _volume : 0;			loopChannel = loopSound.play();			var transform:SoundTransform = loopChannel.soundTransform;			transform.volume = vol;			loopChannel.soundTransform = transform;			loopChannel.addEventListener(Event.SOUND_COMPLETE, onLoopComplete);		}				private function onSoundComplete(event:Event):void {			var channel:SoundChannel = SoundChannel(event.target);			channel = null;		}			}	}