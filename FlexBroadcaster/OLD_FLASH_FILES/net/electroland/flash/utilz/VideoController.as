package net.electroland.flash.utilz {		import flash.display.*;	import flash.media.Video;	import flash.net.URLRequest;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.events.*;	import flash.events.TimerEvent;	import flash.utils.Timer;	public class VideoController extends EventDispatcher{		private var vidSWF:Loader;		private var mcVid:MovieClip;		private var nc:NetConnection;		private var ns:NetStream;		private var duration:Number;		private var client:CustomClient;		private var vidSrc:String;		private var playbackTimer:Timer;		private var stVidSwf:String = "fpoVidHolder.swf";				public function VideoController(path:String) {			vidSWF = new Loader();			vidSWF.contentLoaderInfo.addEventListener(Event.COMPLETE,LoadCompleteHandler);			vidSWF.load(new URLRequest(path+stVidSwf));			playbackTimer = new Timer(50,0);			playbackTimer.addEventListener(TimerEvent.TIMER,onTick);		}		private function LoadCompleteHandler(evt:Event):void		{			var loaderInfo:LoaderInfo = evt.target as LoaderInfo;			mcVid = MovieClip(loaderInfo.content);			mcVid.addEventListener("onRevealed",PlayVidHandler);			mcVid.stop();			nc = new NetConnection();			nc.addEventListener(NetStatusEvent.NET_STATUS,netStatusHandler);			nc.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityEventHandler);			nc.connect(null);			ns = new NetStream(nc);			client = new CustomClient();			client.addEventListener("onMetaData",MetaDataHandler);			ns.client = client;			mcVid.vid.attachNetStream(ns); 			dispatchEvent(new Event("onLoaded"));		}		private function PlayVidHandler(evt:Event):void		{			ns.play(vidSrc);			playbackTimer.start();		}		public function playVideo(prent:MovieClip,video:String):void		{			vidSrc = video;			vidSWF.x = - (vidSWF.width/4);			vidSWF.y = - (vidSWF.height/4);			prent.addChild(vidSWF);			mcVid.vid.visible=true;			mcVid.play();		}		private function onTick(evt:Event):void		{			if(ns.time >= duration){				EndVideo();			}		}		private function EndVideo():void		{			ns.close();			mcVid.vid.visible=false;			mcVid.play();			playbackTimer.stop();		}		private function netStatusHandler(evt:Event):void{		}		private function securityEventHandler(evt:Event):void{		}		private function MetaDataHandler(evt:Event):void		{			duration = client.Duration;		}	}	}import flash.display.Sprite;import flash.events.*;class CustomClient extends Sprite{	public var Duration:Number;		function CustomClient()	{			}	public function onMetaData(info:Object):void{		Duration = info.duration;		dispatchEvent(new Event("onMetaData"));	}		public function onCuePoint(info:Object):void{			}		}